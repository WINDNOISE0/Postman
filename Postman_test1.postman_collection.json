{
	"info": {
		"_postman_id": "00938c4d-5d84-47e8-8287-b26002e0f654",
		"name": "Postman_test1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25804982"
	},
	"item": [
		{
			"name": "Req_one",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "Req_two",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responeJSON = pm.response.json();\r",
							"var resp_name = responeJSON.name;\r",
							"var resp_age = +responeJSON.age\r",
							"var resp_salary = +responeJSON.salary\r",
							"\r",
							"var req = request.data\r",
							"var req_name = req.name\r",
							"var req_age = +req.age\r",
							"var req_salary = +req.salary\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"name equally\", function () {\r",
							"    pm.expect(resp_name).to.eql(\"Vlad\");\r",
							"});\r",
							"\r",
							"pm.test(\"age equally\", function () {\r",
							"    pm.expect(resp_age).to.eql(34);\r",
							"});\r",
							"\r",
							"pm.test(\"salary equally\", function () {\r",
							"    pm.expect(resp_salary).to.eql(10000);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"name equally\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"pm.test(\"age equally\", function () {\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"pm.test(\"salary equally\", function () {\r",
							"    pm.expect(resp_salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"console.log()"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Vlad",
							"type": "text"
						},
						{
							"key": "age",
							"value": "34",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "10000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Req_Three",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseJSON = pm.response.json()\r",
							"var req_url = pm.request.url.query.toObject()\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"name equally\", function () {\r",
							"    pm.expect(responseJSON.name).to.eql(req_url.name);\r",
							"});\r",
							"\r",
							"pm.test(\"age equally\", function () {\r",
							"    pm.expect(responseJSON.age).to.eql(req_url.age);\r",
							"});\r",
							"\r",
							"pm.test(\"salary equally\", function () {\r",
							"    pm.expect(responseJSON.salary).to.eql(+req_url.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Check name in dog\", function () {\r",
							"    pm.expect(responseJSON.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check age in dog\", function () {\r",
							"    pm.expect(responseJSON.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check Lucky in dog\", function () {\r",
							"    pm.expect(responseJSON.family.pets.dog.name).to.eql(\"Luky\")\r",
							"});\r",
							"\r",
							"pm.test(\"Check Lucky in dog\", function () {\r",
							"    pm.expect(responseJSON.family.pets.dog.age).to.eql(4)\r",
							"});\r",
							"\r",
							"console.log(responseJSON.family)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_3?name=Oleg&age=27&salary=20500",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Oleg"
						},
						{
							"key": "age",
							"value": "27"
						},
						{
							"key": "salary",
							"value": "20500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Req_Four",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseJSON = pm.response.json();\r",
							"var req_url = pm.request.url.query.toObject()\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"name equally\", function () {\r",
							"    pm.expect(responseJSON.name).to.eql(req_url.name);\r",
							"});\r",
							"\r",
							"pm.test(\"age equally\", function () {\r",
							"    pm.expect(responseJSON.age).to.eql(+req_url.age);\r",
							"});\r",
							"\r",
							"console.log(req_url.salary)\r",
							"console.log(responseJSON.salary)\r",
							"console.log(responseJSON.salary[0])\r",
							"console.log(responseJSON.salary[1])\r",
							"console.log(responseJSON.salary[2])\r",
							"\r",
							"\r",
							"pm.test(\"item equally\", function () {\r",
							"    pm.expect(responseJSON.salary[0]).to.eql(+req_url.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"item equally\", function () {\r",
							"    pm.expect(responseJSON.salary[1]).to.eql((req_url.salary*2).toString());\r",
							"});\r",
							"\r",
							"pm.test(\"item equally\", function () {\r",
							"    pm.expect(responseJSON.salary[2]).to.eql((req_url.salary*3).toString());\r",
							"});\r",
							"\r",
							"\r",
							"pm.environment.set(\"name\", responseJSON.name);\r",
							"pm.environment.set(\"age\", responseJSON.age);\r",
							"pm.environment.set(\"salary\", req_url.salary);\r",
							"\r",
							"console.log(\"_________\")\r",
							"\r",
							"for(let i = 0; i < responseJSON.salary.length; i++){\r",
							"    console.log(responseJSON.salary[i])\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_4?name=Dima&age=26&salary=110000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Dima"
						},
						{
							"key": "age",
							"value": "26"
						},
						{
							"key": "salary",
							"value": "110000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Req_five",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var responseJSON = pm.response.json()\r",
							"var req = request.data\r",
							"\r",
							"pm.test(\"salary after 6\", function(){\r",
							"    pm.expect(responseJSON).to.have.property(\"qa_salary_after_6_months\")\r",
							"})\r",
							"\r",
							"pm.test(\"salary after 12\", function(){\r",
							"    pm.expect(responseJSON).to.have.property(\"qa_salary_after_12_months\")\r",
							"})\r",
							"\r",
							"pm.test(\"salary after 1.5\", function(){\r",
							"    pm.expect(responseJSON).to.have.property(\"qa_salary_after_1.5_year\")\r",
							"})\r",
							"\r",
							"pm.test(\"salary after 3.5\", function(){\r",
							"    pm.expect(responseJSON).to.have.property(\"qa_salary_after_3.5_years\")\r",
							"})\r",
							"\r",
							"pm.test(\"check person\", function(){\r",
							"    pm.expect(responseJSON).to.have.property(\"person\")\r",
							"})\r",
							"\r",
							"pm.test(\"check eql\", function(){\r",
							"    pm.expect(responseJSON.start_qa_salary).to.eql(+req.salary)\r",
							"})\r",
							"\r",
							"pm.test(\"Check after 6 * 2\", function(){\r",
							"    pm.expect(responseJSON.qa_salary_after_6_months).to.eql(+req.salary*2)\r",
							"})\r",
							"\r",
							"pm.test(\"Check after 12 * 2,7\", function(){\r",
							"    pm.expect(responseJSON.qa_salary_after_12_months).to.eql(+req.salary*2.7)\r",
							"})\r",
							"\r",
							"pm.test(\"Check after 1.5 year\", function(){\r",
							"    pm.expect(responseJSON[\"qa_salary_after_1.5_year\"]).to.eql(+req.salary*3.3)\r",
							"})\r",
							"\r",
							"pm.test(\"Check after 3.5 year\", function(){\r",
							"    pm.expect(responseJSON[\"qa_salary_after_3.5_years\"]).to.eql(+req.salary*3.8)\r",
							"})\r",
							"\r",
							"pm.test(\"Check one el\", function(){\r",
							"    pm.expect(responseJSON.person.u_name[1]).to.eql(+req.salary)\r",
							"})\r",
							"\r",
							"pm.test(\"Check one el\", function(){\r",
							"    pm.expect(responseJSON.person.u_age).to.eql(+req.age)\r",
							"})\r",
							"\r",
							"var tKey = responseJSON.person\r",
							"\r",
							"for(var key in responseJSON.person){\r",
							"    console.log(key + \": \" + responseJSON.person[key])\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}